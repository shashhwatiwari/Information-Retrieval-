import math
import os
def parse_documents(documents):
    index = {}
    
    doc_lengths = {}
    for i, doc in enumerate(documents):
        terms = doc.lower().split()
        doc_weights = {}
        for term in terms:
            if term not in index:
                index[term] = []
            if len(index[term]) > 0 and index[term][-1][0] == i:
                index[term][-1] = (i, index[term][-1][1] + 1)
            else:
                index[term].append((i, 1))
            if term not in doc_weights:
                doc_weights[term] = 0
            doc_weights[term] += 1
        doc_weights = normalize_doc_weights(doc_weights, len(terms))
        for term, weight in doc_weights.items():
            index[term][-1] = (i, weight)
        doc_lengths[i] = sum([weight ** 2 for weight in doc_weights.values()])
    
    return index, doc_lengths
    
def compute_idf(index, num_documents):
    idf = {}
    for term in index:
        idf[term] = math.log10(num_documents / len(index[term]))
    return idf

def compute_query_weights(query, idf):
    query_weights = {}
    terms = query.lower().split()
    for term in terms:
        if term not in query_weights:
            query_weights[term] = 0
        query_weights[term] += 1
